{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "3gpp-as-session-with-qos",
    "description" : "API for setting us an AS session with required QoS.\nÂ© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).\nAll rights reserved.\n",
    "version" : "1.1.3"
  },
  "externalDocs" : {
    "description" : "3GPP TS 29.122 V16.9.0 T8 reference point for Northbound APIs",
    "url" : "http://www.3gpp.org/ftp/Specs/archive/29_series/29.122/"
  },
  "servers" : [ {
    "url" : "{apiRoot}/3gpp-as-session-with-qos/v1",
    "variables" : {
      "apiRoot" : {
        "description" : "apiRoot as defined in subclause 5.2.4 of 3GPP TS 29.122.",
        "default" : "https://example.com"
      }
    }
  } ],
  "security" : [ { }, {
    "oAuth2ClientCredentials" : [ ]
  } ],
  "paths" : {
    "/{scsAsId}/subscriptions" : {
      "get" : {
        "tags" : [ "AsSessionWithQoS API SCS/AS level GET Operation" ],
        "summary" : "read all of the active subscriptions for the SCS/AS",
        "operationId" : "getSubscriptions",
        "parameters" : [ {
          "name" : "scsAsId",
          "in" : "path",
          "description" : "Identifier of the SCS/AS",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AsSessionWithQoSSubscription"
                  }
                }
              }
            }
          },
          "307" : {
            "description" : "Temporary Redirect",
            "headers" : {
              "Location" : {
                "description" : "An alternative URI of the resource.",
                "required" : true,
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "308" : {
            "description" : "Permanent Redirect",
            "headers" : {
              "Location" : {
                "description" : "An alternative URI of the resource.",
                "required" : true,
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default" : {
            "description" : "Generic Error"
          }
        },
        "security" : [ {
          "default" : [ ]
        } ],
        "x-auth-type" : null,
        "x-throttling-tier" : null,
        "x-wso2-application-security" : {
          "security-types" : [ "oauth2" ],
          "optional" : false
        }
      },
      "post" : {
        "tags" : [ "AsSessionWithQoS API Subscription level POST Operation" ],
        "summary" : "Creates a new subscription resource",
        "operationId" : "createSubscription",
        "parameters" : [ {
          "name" : "scsAsId",
          "in" : "path",
          "description" : "Identifier of the SCS/AS",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Request to create a new subscription resource",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AsSessionWithQoSSubscription"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created (Successful creation of subscription)",
            "headers" : {
              "Location" : {
                "description" : "Contains the URI of the newly created resource",
                "required" : true,
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AsSessionWithQoSSubscription"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "411" : {
            "description" : "Length Required",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413" : {
            "description" : "Payload Too Large",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default" : {
            "description" : "Generic Error"
          }
        },
        "callbacks" : {
          "notificationDestination" : {
            "{request.body#/notificationDestination}" : {
              "post" : {
                "requestBody" : {
                  "content" : {
                    "application/json" : {
                      "schema" : {
                        "$ref" : "#/components/schemas/UserPlaneNotificationData"
                      }
                    }
                  },
                  "required" : true
                },
                "responses" : {
                  "204" : {
                    "description" : "No Content (successful notification)"
                  },
                  "307" : {
                    "description" : "Temporary Redirect",
                    "headers" : {
                      "Location" : {
                        "description" : "An alternative URI of the resource.",
                        "required" : true,
                        "style" : "simple",
                        "explode" : false,
                        "schema" : {
                          "type" : "string"
                        }
                      }
                    }
                  },
                  "308" : {
                    "description" : "Permanent Redirect",
                    "headers" : {
                      "Location" : {
                        "description" : "An alternative URI of the resource.",
                        "required" : true,
                        "style" : "simple",
                        "explode" : false,
                        "schema" : {
                          "type" : "string"
                        }
                      }
                    }
                  },
                  "400" : {
                    "description" : "Bad request",
                    "content" : {
                      "application/problem+json" : {
                        "schema" : {
                          "$ref" : "#/components/schemas/ProblemDetails"
                        }
                      }
                    }
                  },
                  "401" : {
                    "description" : "Unauthorized",
                    "content" : {
                      "application/problem+json" : {
                        "schema" : {
                          "$ref" : "#/components/schemas/ProblemDetails"
                        }
                      }
                    }
                  },
                  "403" : {
                    "description" : "Forbidden",
                    "content" : {
                      "application/problem+json" : {
                        "schema" : {
                          "$ref" : "#/components/schemas/ProblemDetails"
                        }
                      }
                    }
                  },
                  "404" : {
                    "description" : "Not Found",
                    "content" : {
                      "application/problem+json" : {
                        "schema" : {
                          "$ref" : "#/components/schemas/ProblemDetails"
                        }
                      }
                    }
                  },
                  "411" : {
                    "description" : "Length Required",
                    "content" : {
                      "application/problem+json" : {
                        "schema" : {
                          "$ref" : "#/components/schemas/ProblemDetails"
                        }
                      }
                    }
                  },
                  "413" : {
                    "description" : "Payload Too Large",
                    "content" : {
                      "application/problem+json" : {
                        "schema" : {
                          "$ref" : "#/components/schemas/ProblemDetails"
                        }
                      }
                    }
                  },
                  "415" : {
                    "description" : "Unsupported Media Type",
                    "content" : {
                      "application/problem+json" : {
                        "schema" : {
                          "$ref" : "#/components/schemas/ProblemDetails"
                        }
                      }
                    }
                  },
                  "429" : {
                    "description" : "Too Many Requests",
                    "content" : {
                      "application/problem+json" : {
                        "schema" : {
                          "$ref" : "#/components/schemas/ProblemDetails"
                        }
                      }
                    }
                  },
                  "500" : {
                    "description" : "Internal Server Error",
                    "content" : {
                      "application/problem+json" : {
                        "schema" : {
                          "$ref" : "#/components/schemas/ProblemDetails"
                        }
                      }
                    }
                  },
                  "503" : {
                    "description" : "Service Unavailable",
                    "content" : {
                      "application/problem+json" : {
                        "schema" : {
                          "$ref" : "#/components/schemas/ProblemDetails"
                        }
                      }
                    }
                  },
                  "default" : {
                    "description" : "Generic Error"
                  }
                }
              }
            }
          },
          "testNotificationDestination" : {
            "{request.body#/notificationDestination}" : {
              "post" : {
                "requestBody" : {
                  "content" : {
                    "application/json" : {
                      "schema" : {
                        "$ref" : "#/components/schemas/TestNotification"
                      }
                    }
                  },
                  "required" : true
                },
                "responses" : {
                  "204" : {
                    "description" : "No Content (successful notification)"
                  },
                  "307" : {
                    "description" : "Temporary Redirect",
                    "headers" : {
                      "Location" : {
                        "description" : "An alternative URI of the resource.",
                        "required" : true,
                        "style" : "simple",
                        "explode" : false,
                        "schema" : {
                          "type" : "string"
                        }
                      }
                    }
                  },
                  "308" : {
                    "description" : "Permanent Redirect",
                    "headers" : {
                      "Location" : {
                        "description" : "An alternative URI of the resource.",
                        "required" : true,
                        "style" : "simple",
                        "explode" : false,
                        "schema" : {
                          "type" : "string"
                        }
                      }
                    }
                  },
                  "400" : {
                    "description" : "Bad request",
                    "content" : {
                      "application/problem+json" : {
                        "schema" : {
                          "$ref" : "#/components/schemas/ProblemDetails"
                        }
                      }
                    }
                  },
                  "401" : {
                    "description" : "Unauthorized",
                    "content" : {
                      "application/problem+json" : {
                        "schema" : {
                          "$ref" : "#/components/schemas/ProblemDetails"
                        }
                      }
                    }
                  },
                  "403" : {
                    "description" : "Forbidden",
                    "content" : {
                      "application/problem+json" : {
                        "schema" : {
                          "$ref" : "#/components/schemas/ProblemDetails"
                        }
                      }
                    }
                  },
                  "404" : {
                    "description" : "Not Found",
                    "content" : {
                      "application/problem+json" : {
                        "schema" : {
                          "$ref" : "#/components/schemas/ProblemDetails"
                        }
                      }
                    }
                  },
                  "411" : {
                    "description" : "Length Required",
                    "content" : {
                      "application/problem+json" : {
                        "schema" : {
                          "$ref" : "#/components/schemas/ProblemDetails"
                        }
                      }
                    }
                  },
                  "413" : {
                    "description" : "Payload Too Large",
                    "content" : {
                      "application/problem+json" : {
                        "schema" : {
                          "$ref" : "#/components/schemas/ProblemDetails"
                        }
                      }
                    }
                  },
                  "415" : {
                    "description" : "Unsupported Media Type",
                    "content" : {
                      "application/problem+json" : {
                        "schema" : {
                          "$ref" : "#/components/schemas/ProblemDetails"
                        }
                      }
                    }
                  },
                  "429" : {
                    "description" : "Too Many Requests",
                    "content" : {
                      "application/problem+json" : {
                        "schema" : {
                          "$ref" : "#/components/schemas/ProblemDetails"
                        }
                      }
                    }
                  },
                  "500" : {
                    "description" : "Internal Server Error",
                    "content" : {
                      "application/problem+json" : {
                        "schema" : {
                          "$ref" : "#/components/schemas/ProblemDetails"
                        }
                      }
                    }
                  },
                  "503" : {
                    "description" : "Service Unavailable",
                    "content" : {
                      "application/problem+json" : {
                        "schema" : {
                          "$ref" : "#/components/schemas/ProblemDetails"
                        }
                      }
                    }
                  },
                  "default" : {
                    "description" : "Generic Error"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "default" : [ ]
        } ],
        "x-auth-type" : null,
        "x-throttling-tier" : null,
        "x-wso2-application-security" : {
          "security-types" : [ "oauth2" ],
          "optional" : false
        }
      }
    },
    "/{scsAsId}/subscriptions/{subscriptionId}" : {
      "get" : {
        "tags" : [ "AsSessionWithQoS API Subscription level GET Operation" ],
        "summary" : "read an active subscriptions for the SCS/AS and the subscription Id",
        "operationId" : "getSubscription",
        "parameters" : [ {
          "name" : "scsAsId",
          "in" : "path",
          "description" : "Identifier of the SCS/AS",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Identifier of the subscription resource",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK (Successful get the active subscription)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AsSessionWithQoSSubscription"
                }
              }
            }
          },
          "307" : {
            "description" : "Temporary Redirect",
            "headers" : {
              "Location" : {
                "description" : "An alternative URI of the resource.",
                "required" : true,
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "308" : {
            "description" : "Permanent Redirect",
            "headers" : {
              "Location" : {
                "description" : "An alternative URI of the resource.",
                "required" : true,
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default" : {
            "description" : "Generic Error"
          }
        },
        "security" : [ {
          "default" : [ ]
        } ],
        "x-auth-type" : null,
        "x-throttling-tier" : null,
        "x-wso2-application-security" : {
          "security-types" : [ "oauth2" ],
          "optional" : false
        }
      },
      "put" : {
        "tags" : [ "AsSessionWithQoS API subscription level PUT Operation" ],
        "summary" : "Updates/replaces an existing subscription resource",
        "operationId" : "updateSubscription",
        "parameters" : [ {
          "name" : "scsAsId",
          "in" : "path",
          "description" : "Identifier of the SCS/AS",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Identifier of the subscription resource",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters to update/replace the existing subscription",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AsSessionWithQoSSubscription"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK (Successful update of the subscription)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AsSessionWithQoSSubscription"
                }
              }
            }
          },
          "307" : {
            "description" : "Temporary Redirect",
            "headers" : {
              "Location" : {
                "description" : "An alternative URI of the resource.",
                "required" : true,
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "308" : {
            "description" : "Permanent Redirect",
            "headers" : {
              "Location" : {
                "description" : "An alternative URI of the resource.",
                "required" : true,
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "411" : {
            "description" : "Length Required",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413" : {
            "description" : "Payload Too Large",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default" : {
            "description" : "Generic Error"
          }
        },
        "security" : [ {
          "default" : [ ]
        } ],
        "x-auth-type" : null,
        "x-throttling-tier" : null,
        "x-wso2-application-security" : {
          "security-types" : [ "oauth2" ],
          "optional" : false
        }
      },
      "delete" : {
        "tags" : [ "AsSessionWithQoS API Subscription level DELETE Operation" ],
        "summary" : "Deletes an already existing subscription",
        "operationId" : "deleteSubscription",
        "parameters" : [ {
          "name" : "scsAsId",
          "in" : "path",
          "description" : "Identifier of the SCS/AS",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Identifier of the subscription resource",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content (Successful deletion of the existing subscription)"
          },
          "200" : {
            "description" : "OK (Successful deletion of the existing subscription)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserPlaneNotificationData"
                }
              }
            }
          },
          "307" : {
            "description" : "Temporary Redirect",
            "headers" : {
              "Location" : {
                "description" : "An alternative URI of the resource.",
                "required" : true,
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "308" : {
            "description" : "Permanent Redirect",
            "headers" : {
              "Location" : {
                "description" : "An alternative URI of the resource.",
                "required" : true,
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default" : {
            "description" : "Generic Error"
          }
        },
        "security" : [ {
          "default" : [ ]
        } ],
        "x-auth-type" : null,
        "x-throttling-tier" : null,
        "x-wso2-application-security" : {
          "security-types" : [ "oauth2" ],
          "optional" : false
        }
      },
      "patch" : {
        "tags" : [ "AsSessionWithQoS API subscription level PATCH Operation" ],
        "summary" : "Updates/replaces an existing subscription resource",
        "operationId" : "patchSubscription",
        "parameters" : [ {
          "name" : "scsAsId",
          "in" : "path",
          "description" : "Identifier of the SCS/AS",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Identifier of the subscription resource",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/merge-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AsSessionWithQoSSubscriptionPatch"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK. The subscription was modified successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AsSessionWithQoSSubscription"
                }
              }
            }
          },
          "307" : {
            "description" : "Temporary Redirect",
            "headers" : {
              "Location" : {
                "description" : "An alternative URI of the resource.",
                "required" : true,
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "308" : {
            "description" : "Permanent Redirect",
            "headers" : {
              "Location" : {
                "description" : "An alternative URI of the resource.",
                "required" : true,
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "411" : {
            "description" : "Length Required",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413" : {
            "description" : "Payload Too Large",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default" : {
            "description" : "Generic Error"
          }
        },
        "security" : [ {
          "default" : [ ]
        } ],
        "x-auth-type" : null,
        "x-throttling-tier" : null,
        "x-wso2-application-security" : {
          "security-types" : [ "oauth2" ],
          "optional" : false
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "AsSessionWithQoSSubscription" : {
        "required" : [ "notificationDestination" ],
        "type" : "object",
        "properties" : {
          "self" : {
            "$ref" : "#/components/schemas/Link"
          },
          "supportedFeatures" : {
            "$ref" : "#/components/schemas/SupportedFeatures"
          },
          "notificationDestination" : {
            "$ref" : "#/components/schemas/Link"
          },
          "flowInfo" : {
            "minItems" : 1,
            "type" : "array",
            "description" : "Describe the data flow which requires QoS.",
            "items" : {
              "$ref" : "#/components/schemas/FlowInfo"
            }
          },
          "ethFlowInfo" : {
            "minItems" : 1,
            "type" : "array",
            "description" : "Identifies Ethernet packet flows.",
            "items" : {
              "$ref" : "#/components/schemas/EthFlowDescription"
            }
          },
          "qosReference" : {
            "type" : "string",
            "description" : "Identifies a pre-defined QoS information"
          },
          "altQoSReferences" : {
            "minItems" : 1,
            "type" : "array",
            "description" : "Identifies an ordered list of pre-defined QoS information. The lower the index of the array for a given entry, the higher the priority.",
            "items" : {
              "type" : "string"
            }
          },
          "disUeNotif" : {
            "type" : "boolean"
          },
          "ueIpv4Addr" : {
            "$ref" : "#/components/schemas/Ipv4Addr"
          },
          "ipDomain" : {
            "type" : "string"
          },
          "ueIpv6Addr" : {
            "$ref" : "#/components/schemas/Ipv6Addr"
          },
          "macAddr" : {
            "$ref" : "#/components/schemas/MacAddr48"
          },
          "usageThreshold" : {
            "$ref" : "#/components/schemas/UsageThreshold"
          },
          "sponsorInfo" : {
            "$ref" : "#/components/schemas/SponsorInformation"
          },
          "qosMonInfo" : {
            "$ref" : "#/components/schemas/QosMonitoringInformation"
          },
          "requestTestNotification" : {
            "type" : "boolean",
            "description" : "Set to true by the SCS/AS to request the SCEF to send a test notification as defined in subclause 5.2.5.3. Set to false or omitted otherwise."
          },
          "websockNotifConfig" : {
            "$ref" : "#/components/schemas/WebsockNotifConfig"
          }
        }
      },
      "AsSessionWithQoSSubscriptionPatch" : {
        "type" : "object",
        "properties" : {
          "flowInfo" : {
            "minItems" : 1,
            "type" : "array",
            "description" : "Describe the data flow which requires QoS.",
            "items" : {
              "$ref" : "#/components/schemas/FlowInfo"
            }
          },
          "ethFlowInfo" : {
            "minItems" : 1,
            "type" : "array",
            "description" : "Identifies Ethernet packet flows.",
            "items" : {
              "$ref" : "#/components/schemas/EthFlowDescription"
            }
          },
          "qosReference" : {
            "type" : "string",
            "description" : "Pre-defined QoS reference"
          },
          "altQoSReferences" : {
            "minItems" : 1,
            "type" : "array",
            "description" : "Identifies an ordered list of pre-defined QoS information. The lower the index of the array for a given entry, the higher the priority.",
            "items" : {
              "type" : "string"
            }
          },
          "disUeNotif" : {
            "type" : "boolean"
          },
          "usageThreshold" : {
            "$ref" : "#/components/schemas/UsageThresholdRm"
          },
          "qosMonInfo" : {
            "$ref" : "#/components/schemas/QosMonitoringInformationRm"
          }
        }
      },
      "QosMonitoringInformation" : {
        "required" : [ "repFreqs", "reqQosMonParams" ],
        "type" : "object",
        "properties" : {
          "reqQosMonParams" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RequestedQosMonitoringParameter"
            }
          },
          "repFreqs" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ReportingFrequency"
            }
          },
          "repThreshDl" : {
            "$ref" : "#/components/schemas/Uinteger"
          },
          "repThreshUl" : {
            "$ref" : "#/components/schemas/Uinteger"
          },
          "repThreshRp" : {
            "$ref" : "#/components/schemas/Uinteger"
          },
          "waitTime" : {
            "$ref" : "#/components/schemas/DurationSec_2"
          },
          "repPeriod" : {
            "$ref" : "#/components/schemas/DurationSec_2"
          }
        }
      },
      "QosMonitoringInformationRm" : {
        "type" : "object",
        "properties" : {
          "reqQosMonParams" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RequestedQosMonitoringParameter"
            }
          },
          "repFreqs" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ReportingFrequency"
            }
          },
          "repThreshDl" : {
            "$ref" : "#/components/schemas/UintegerRm"
          },
          "repThreshUl" : {
            "$ref" : "#/components/schemas/UintegerRm"
          },
          "repThreshRp" : {
            "$ref" : "#/components/schemas/UintegerRm"
          },
          "waitTime" : {
            "$ref" : "#/components/schemas/DurationSecRm_2"
          },
          "repPeriod" : {
            "$ref" : "#/components/schemas/DurationSecRm_2"
          }
        }
      },
      "QosMonitoringReport" : {
        "type" : "object",
        "properties" : {
          "ulDelays" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Uinteger"
            }
          },
          "dlDelays" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Uinteger"
            }
          },
          "rtDelays" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Uinteger"
            }
          }
        }
      },
      "UserPlaneNotificationData" : {
        "required" : [ "eventReports", "transaction" ],
        "type" : "object",
        "properties" : {
          "transaction" : {
            "$ref" : "#/components/schemas/Link"
          },
          "eventReports" : {
            "minItems" : 1,
            "type" : "array",
            "description" : "Contains the reported event and applicable information",
            "items" : {
              "$ref" : "#/components/schemas/UserPlaneEventReport"
            }
          }
        }
      },
      "UserPlaneEventReport" : {
        "required" : [ "event" ],
        "type" : "object",
        "properties" : {
          "event" : {
            "$ref" : "#/components/schemas/UserPlaneEvent"
          },
          "accumulatedUsage" : {
            "$ref" : "#/components/schemas/AccumulatedUsage"
          },
          "flowIds" : {
            "minItems" : 1,
            "type" : "array",
            "description" : "Identifies the IP flows that were sent during event subscription",
            "items" : {
              "type" : "integer"
            }
          },
          "appliedQosRef" : {
            "type" : "string",
            "description" : "The currently applied QoS reference. Applicable for event QOS_NOT_GUARANTEED or SUCCESSFUL_RESOURCES_ALLOCATION."
          },
          "qosMonReports" : {
            "minItems" : 1,
            "type" : "array",
            "description" : "Contains the QoS Monitoring Reporting information",
            "items" : {
              "$ref" : "#/components/schemas/QosMonitoringReport"
            }
          }
        }
      },
      "UserPlaneEvent" : {
        "description" : "Possible values are - SESSION_TERMINATION: Indicates that Rx session is terminated. - LOSS_OF_BEARER : Indicates a loss of a bearer. - RECOVERY_OF_BEARER: Indicates a recovery of a bearer. - RELEASE_OF_BEARER: Indicates a release of a bearer. - USAGE_REPORT: Indicates the usage report event. - FAILED_RESOURCES_ALLOCATION: Indicates the resource allocation is failed. - QOS_GUARANTEED: The QoS targets of one or more SDFs are guaranteed again. - QOS_NOT_GUARANTEED: The QoS targets of one or more SDFs are not being guaranteed. - QOS_MONITORING: Indicates a QoS monitoring event.  - SUCCESSFUL_RESOURCES_ALLOCATION: Indicates the resource allocation is successful.\n",
        "anyOf" : [ {
          "type" : "string",
          "enum" : [ "SESSION_TERMINATION", "LOSS_OF_BEARER", "RECOVERY_OF_BEARER", "RELEASE_OF_BEARER", "USAGE_REPORT", "FAILED_RESOURCES_ALLOCATION", "QOS_GUARANTEED", "QOS_NOT_GUARANTEED", "QOS_MONITORING", "SUCCESSFUL_RESOURCES_ALLOCATION" ]
        }, {
          "type" : "string",
          "description" : "This string provides forward-compatibility with future extensions to the enumeration but is not used to encode content defined in the present version of this API.\n"
        } ]
      },
      "ProblemDetails" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/Uri"
          },
          "title" : {
            "type" : "string",
            "description" : "A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem."
          },
          "status" : {
            "type" : "integer",
            "description" : "The HTTP status code for this occurrence of the problem."
          },
          "detail" : {
            "type" : "string",
            "description" : "A human-readable explanation specific to this occurrence of the problem."
          },
          "instance" : {
            "$ref" : "#/components/schemas/Uri"
          },
          "cause" : {
            "type" : "string",
            "description" : "A machine-readable application error cause specific to this occurrence of the problem. This IE should be present and provide application-related error information, if available."
          },
          "invalidParams" : {
            "minItems" : 1,
            "type" : "array",
            "description" : "Description of invalid parameters, for a request rejected due to invalid parameters.",
            "items" : {
              "$ref" : "#/components/schemas/InvalidParam"
            }
          }
        }
      },
      "Uri" : {
        "type" : "string",
        "description" : "string providing an URI formatted according to IETFÂ RFCÂ 3986."
      },
      "InvalidParam" : {
        "required" : [ "param" ],
        "type" : "object",
        "properties" : {
          "param" : {
            "type" : "string",
            "description" : "Attribute's name encoded as a JSON Pointer, or header's name."
          },
          "reason" : {
            "type" : "string",
            "description" : "A human-readable reason, e.g. \"must be a positive integer\"."
          }
        }
      },
      "TestNotification" : {
        "required" : [ "subscription" ],
        "type" : "object",
        "properties" : {
          "subscription" : {
            "$ref" : "#/components/schemas/Link"
          }
        }
      },
      "Link" : {
        "type" : "string",
        "description" : "string formatted according to IETFÂ RFCÂ 3986 identifying a referenced resource."
      },
      "SupportedFeatures" : {
        "pattern" : "^[A-Fa-f0-9]*$",
        "type" : "string"
      },
      "FlowInfo" : {
        "required" : [ "flowId" ],
        "type" : "object",
        "properties" : {
          "flowId" : {
            "type" : "integer",
            "description" : "Indicates the IP flow."
          },
          "flowDescriptions" : {
            "maxItems" : 2,
            "minItems" : 1,
            "type" : "array",
            "description" : "Indicates the packet filters of the IP flow. Refer to subclauseÂ 5.3.8 of 3GPPÂ TSÂ 29.214 for encoding. It shall contain UL and/or DL IP flow description.",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "EthFlowDescription" : {
        "required" : [ "ethType" ],
        "type" : "object",
        "properties" : {
          "destMacAddr" : {
            "$ref" : "#/components/schemas/MacAddr48"
          },
          "ethType" : {
            "type" : "string"
          },
          "fDesc" : {
            "$ref" : "#/components/schemas/FlowDescription"
          },
          "fDir" : {
            "$ref" : "#/components/schemas/FlowDirection"
          },
          "sourceMacAddr" : {
            "$ref" : "#/components/schemas/MacAddr48"
          },
          "vlanTags" : {
            "maxItems" : 2,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "srcMacAddrEnd" : {
            "$ref" : "#/components/schemas/MacAddr48"
          },
          "destMacAddrEnd" : {
            "$ref" : "#/components/schemas/MacAddr48"
          }
        },
        "description" : "Identifies an Ethernet flow"
      },
      "FlowDescription" : {
        "type" : "string",
        "description" : "Defines a packet filter of an IP flow."
      },
      "Ipv4Addr" : {
        "type" : "string",
        "description" : "string identifying a Ipv4 address formatted in the \"dotted decimal\" notation as defined in IETFÂ RFCÂ 1166."
      },
      "Ipv6Addr" : {
        "type" : "string",
        "description" : "string identifying a Ipv6 address formatted according to clause 4 in IETFÂ RFCÂ 5952. The mixed Ipv4 Ipv6 notation according to clause 5 of IETFÂ RFCÂ 5952 shall not be used."
      },
      "MacAddr48" : {
        "pattern" : "^([0-9a-fA-F]{2})((-[0-9a-fA-F]{2}){5})$",
        "type" : "string"
      },
      "UsageThreshold" : {
        "type" : "object",
        "properties" : {
          "duration" : {
            "$ref" : "#/components/schemas/DurationSec"
          },
          "totalVolume" : {
            "$ref" : "#/components/schemas/Volume"
          },
          "downlinkVolume" : {
            "$ref" : "#/components/schemas/Volume"
          },
          "uplinkVolume" : {
            "$ref" : "#/components/schemas/Volume"
          }
        }
      },
      "DurationSec" : {
        "minimum" : 0,
        "type" : "integer",
        "description" : "Unsigned integer identifying a period of time in units of seconds."
      },
      "Volume" : {
        "minimum" : 0,
        "type" : "integer",
        "description" : "Unsigned integer identifying a volume in units of bytes.",
        "format" : "int64"
      },
      "SponsorInformation" : {
        "required" : [ "aspId", "sponsorId" ],
        "type" : "object",
        "properties" : {
          "sponsorId" : {
            "type" : "string",
            "description" : "It indicates Sponsor ID."
          },
          "aspId" : {
            "type" : "string",
            "description" : "It indicates Application Service Provider ID."
          }
        }
      },
      "WebsockNotifConfig" : {
        "type" : "object",
        "properties" : {
          "websocketUri" : {
            "$ref" : "#/components/schemas/Link"
          },
          "requestWebsocketUri" : {
            "type" : "boolean",
            "description" : "Set by the SCS/AS to indicate that the Websocket delivery is requested."
          }
        }
      },
      "UsageThresholdRm" : {
        "type" : "object",
        "properties" : {
          "duration" : {
            "$ref" : "#/components/schemas/DurationSecRm"
          },
          "totalVolume" : {
            "$ref" : "#/components/schemas/VolumeRm"
          },
          "downlinkVolume" : {
            "$ref" : "#/components/schemas/VolumeRm"
          },
          "uplinkVolume" : {
            "$ref" : "#/components/schemas/VolumeRm"
          }
        },
        "nullable" : true
      },
      "DurationSecRm" : {
        "minimum" : 0,
        "type" : "integer",
        "description" : "Unsigned integer identifying a period of time in units of seconds with \"nullable=true\" property.",
        "nullable" : true
      },
      "VolumeRm" : {
        "minimum" : 0,
        "type" : "integer",
        "description" : "Unsigned integer identifying a volume in units of bytes with \"nullable=true\" property.",
        "format" : "int64",
        "nullable" : true
      },
      "RequestedQosMonitoringParameter" : {
        "anyOf" : [ {
          "type" : "string",
          "enum" : [ "DOWNLINK", "UPLINK", "ROUND_TRIP" ]
        }, {
          "type" : "string"
        } ]
      },
      "ReportingFrequency" : {
        "anyOf" : [ {
          "type" : "string",
          "enum" : [ "EVENT_TRIGGERED", "PERIODIC", "SESSION_RELEASE" ]
        }, {
          "type" : "string"
        } ]
      },
      "Uinteger" : {
        "minimum" : 0,
        "type" : "integer"
      },
      "DurationSec_2" : {
        "type" : "integer"
      },
      "UintegerRm" : {
        "minimum" : 0,
        "type" : "integer",
        "nullable" : true
      },
      "DurationSecRm_2" : {
        "type" : "integer",
        "nullable" : true
      },
      "AccumulatedUsage" : {
        "type" : "object",
        "properties" : {
          "duration" : {
            "$ref" : "#/components/schemas/DurationSec"
          },
          "totalVolume" : {
            "$ref" : "#/components/schemas/Volume"
          },
          "downlinkVolume" : {
            "$ref" : "#/components/schemas/Volume"
          },
          "uplinkVolume" : {
            "$ref" : "#/components/schemas/Volume"
          }
        }
      },
      "FlowDirection" : {
        "description" : "Possible values are - DOWNLINK: The corresponding filter applies for traffic to the UE. - UPLINK: The corresponding filter applies for traffic from the UE. - BIDIRECTIONAL: The corresponding filter applies for traffic both to and from the UE. - UNSPECIFIED: The corresponding filter applies for traffic to the UE (downlink), but has no specific direction declared. The service data flow detection shall apply the filter for uplink traffic as if the filter was bidirectional. The PCF shall not use the value UNSPECIFIED in filters created by the network in NW-initiated procedures. The PCF shall only include the value UNSPECIFIED in filters in UE-initiated procedures if the same value is received from the SMF.\n",
        "anyOf" : [ {
          "type" : "string",
          "enum" : [ "DOWNLINK", "UPLINK", "BIDIRECTIONAL", "UNSPECIFIED" ]
        }, {
          "type" : "string",
          "description" : "This string provides forward-compatibility with future extensions to the enumeration but is not used to encode content defined in the present version of this API.\n"
        } ]
      }
    },
    "securitySchemes" : {
      "oAuth2ClientCredentials" : {
        "type" : "oauth2",
        "flows" : {
          "clientCredentials" : {
            "tokenUrl" : "{tokenUrl}",
            "scopes" : { }
          }
        }
      },
      "default" : {
        "type" : "oauth2",
        "flows" : {
          "implicit" : {
            "authorizationUrl" : "https://test.com",
            "scopes" : { }
          }
        }
      }
    }
  },
  "x-wso2-auth-header" : "Authorization",
  "x-throttling-tier" : "Unlimited",
  "x-wso2-cors" : {
    "corsConfigurationEnabled" : false,
    "accessControlAllowOrigins" : [ "*" ],
    "accessControlAllowCredentials" : false,
    "accessControlAllowHeaders" : [ "authorization", "Access-Control-Allow-Origin", "Content-Type", "SOAPAction", "apikey", "Internal-Key" ],
    "accessControlAllowMethods" : [ "GET", "PUT", "POST", "DELETE", "PATCH", "OPTIONS" ]
  },
  "x-wso2-production-endpoints" : {
    "urls" : [ "http://service-hostname:8080/3gpp-as-session-with-qos/v1/" ],
    "type" : "http"
  },
  "x-wso2-sandbox-endpoints" : {
    "urls" : [ "http://service-hostname:8080/3gpp-as-session-with-qos/v1/" ],
    "type" : "http"
  },
  "x-wso2-basePath" : "/qos/1.1.4",
  "x-wso2-transports" : [ "http", "https" ],
  "x-wso2-response-cache" : {
    "enabled" : false,
    "cacheTimeoutInSeconds" : 300
  }
}